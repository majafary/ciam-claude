openapi: 3.0.3
info:
  title: CIAM Backend API
  description: |
    Customer Identity and Access Management (CIAM) Backend API with MFA, eSign, and device trust capabilities

    ## Client Registration

    All API endpoints require a valid `x-client-id` header:
    - Client IDs must be pre-registered before API access
    - Validation occurs at gateway level before reaching API
    - Unknown client IDs return 401 Unauthorized (response format determined by gateway)
    - Contact CIAM Team for client registration

    ## Request Validation

    All API endpoints perform request validation according to OpenAPI schema constraints.

    ### Required Fields
    When required fields are missing or invalid, the API returns a 400 Bad Request response with:
    - `error_code`: "CIAM_E01_05_001" (ValidationErrors)
    - `context_id`: Authentication context identifier (when available)

    ### Authentication Context Flow
    Most authentication endpoints require `context_id` and `transaction_id` parameters:

    1. **context_id**: Returned by `/auth/login` and maintained throughout the authentication flow
       - Used to track authentication state across multiple steps
       - Required in all subsequent authentication operations (MFA, eSign, device binding)
       - Missing context_id results in validation error (CIAM_E01_05_001)

    2. **transaction_id**: Returned by `/auth/login` or `/auth/mfa/initiate`
       - Identifies specific MFA, eSign, or device binding transactions
       - Required for transaction completion and verification
       - Missing transaction_id results in validation error (CIAM_E01_05_001)

    ### Error Response Format
    All error responses follow a consistent structure:
    ```json
    {
      "error_code": "CIAM_E01_05_001",
      "context_id": "ctx_abc123"
    }
    ```

    ### Validation Behavior
    - **Schema Validation**: OpenAPI schema constraints are enforced (required fields, data types, formats)
    - **Business Validation**: Domain-specific rules (e.g., invalid MFA method, transaction expired)
    - **Fail Fast**: API returns validation errors immediately before processing requests
  version: 2.2.0
  contact:
    name: CIAM Team
servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.example.com
    description: Production server

tags:
  - name: Health
    description: Health check endpoints
  - name: Authentication
    description: User authentication and session management
  - name: MFA
    description: Multi-factor authentication endpoints
  - name: eSign
    description: Electronic signature endpoints
  - name: User
    description: User information endpoints
  - name: Device
    description: Device management and trust
  - name: OIDC
    description: OpenID Connect endpoints

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: Returns the health status of the API
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    format: date-time
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user with username and password. Returns tokens on success or MFA/eSign requirement.
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - transmit_aid
              properties:
                username:
                  type: string
                  example: mfauser
                password:
                  type: string
                  format: password
                  example: password
                transmit_aid:
                  type: string
                  description: Transmit application identifier. Legacy identifier used in DRS implementation for determining if MFA is required
                context_id:
                  type: string
                  description: Optional context ID for resuming an existing authentication context
                drs_action_token:
                  type: string
                  description: Device recognition token from DRS SDK
      responses:
        '200':
          description: Additional authentication steps required
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MFARequiredResponse'
                  - $ref: '#/components/schemas/ESignRequiredResponse'
                  - $ref: '#/components/schemas/DeviceBindRequiredResponse'
        '201':
          description: Login successful
          headers:
            Set-Cookie:
              description: Refresh token set as httpOnly cookie
              schema:
                type: string
                example: "refresh_token=nonce_xyz789abc; HttpOnly; Secure; SameSite=Strict; Path=/; Max-Age=2592000"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
        '401':
          description: |
            Authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)

            **API-level errors:**
            - CIAM_E01_01_001: User not found or invalid credentials
            - CIAM_E01_01_016: Username contains masked value
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GatewayErrorResponse'
                  - $ref: '#/components/schemas/ApplicationErrorResponse'
              examples:
                invalid_credentials:
                  summary: Invalid username or password
                  value:
                    error_code: "CIAM_E01_01_001"
                    context_id: "ctx_abc123"
                masked_username:
                  summary: Username contains masked value
                  value:
                    error_code: "CIAM_E01_01_016"
                    context_id: "ctx_def456"
        '403':
          description: |
            Access denied due to policy restrictions

            **Possible error codes:**
            - CIAM_E01_01_010: Analyze deny - User IP on deny list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_01_010"
                context_id: "ctx_abc123"
        '423':
          description: |
            Account or MFA locked

            **Possible error codes:**
            - CIAM_E01_01_002: User password locked
            - CIAM_E01_01_003: User disabled
            - CIAM_E01_01_004: Enterprise credential block
            - CIAM_E01_01_005: MFA locked
            - CIAM_E01_01_006: User deceased
            - CIAM_E01_01_008: CAPI restriction blocked by bank or customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              examples:
                password_locked:
                  summary: Account locked due to failed password attempts
                  value:
                    error_code: "CIAM_E01_01_002"
                    context_id: "ctx_abc123"
                mfa_locked:
                  summary: MFA locked due to failed attempts
                  value:
                    error_code: "CIAM_E01_01_005"
                    context_id: "ctx_def456"
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Logout user and clear session
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Logout successful
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Refresh access token using refresh token nonce from httpOnly cookie. Validates refresh token nonce against database and issues new access token nonce.
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Token refreshed successfully
          headers:
            Set-Cookie:
              description: New refresh token set as httpOnly cookie (refresh token rotation)
              schema:
                type: string
                example: "refresh_token=nonce_xyz789abc; HttpOnly; Secure; SameSite=Strict; Path=/; Max-Age=2592000"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: Bearer
                  expires_in:
                    type: integer
                    example: 900
                    description: Token lifetime in seconds
        '401':
          description: |
            Authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)

            **API-level errors (Token & Session):**
            - CIAM_E04_00_001: Refresh token not decryptable
            - CIAM_E04_00_002: Refresh token not valid or expired
            - CIAM_E04_00_003: Session not readable
            - CIAM_E04_00_004: Session not active
            - CIAM_E04_00_005: Session expired
            - CIAM_E04_00_008: Null refresh token
            - CIAM_E04_00_009: Username not matched
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GatewayErrorResponse'
                  - $ref: '#/components/schemas/ApplicationErrorResponse'
              examples:
                token_expired:
                  summary: Refresh token expired
                  value:
                    error_code: "CIAM_E04_00_002"
                    context_id: "ctx_abc123"
                token_not_found:
                  summary: Refresh token not found
                  value:
                    error_code: "CIAM_E04_00_001"
                    context_id: "ctx_def456"
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /auth/token/verify:
    post:
      tags:
        - Authentication
      summary: Verify access token (for Kong gateway)
      description: |
        Token verification endpoint for Kong gateway to validate reference tokens (nonce).
        Validates token existence, expiration, and optional scopes.
        This endpoint is secured with API key authentication.
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/ClientId'
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
          description: API key for gateway authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: The access token nonce to verify
                  example: "nonce_abc123xyz"
                scopes:
                  type: array
                  items:
                    type: string
                  description: Required scopes to validate (optional)
                  example: ["read:profile", "write:data"]
      responses:
        '200':
          description: Token verification result
          content:
            application/json:
              schema:
                type: object
                required:
                  - active
                properties:
                  active:
                    type: boolean
                    description: Whether the token is valid and has required scopes
                  expires_in:
                    type: integer
                    description: Seconds until token expiration (only present when active is true)
                    example: 900
              examples:
                valid_token:
                  summary: Valid token
                  value:
                    active: true
                    expires_in: 900
                invalid_token:
                  summary: Invalid token
                  value:
                    active: false
        '400':
          description: |
            Request validation failed

            **Possible error codes:**
            - CIAM_E01_05_001: Missing required token field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_05_001"
        '401':
          description: |
            API key authentication failed

            **Possible error codes:**
            - CIAM_E04_00_010: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'
              example:
                error_code: "CIAM_E04_00_010"
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                type: object
                required:
                  - error_code
                properties:
                  error_code:
                    $ref: '#/components/schemas/CIAMErrorCodes'
              example:
                error_code: "CIAM_E05_00_001"

  /auth/mfa/initiate:
    post:
      tags:
        - MFA
      summary: Initiate MFA challenge
      description: Start MFA challenge for OTP or Push notification
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - context_id
                - transaction_id
                - method
              properties:
                context_id:
                  type: string
                  description: Context ID from login response
                transaction_id:
                  type: string
                method:
                  type: string
                  enum: [sms, voice, push]
                  example: sms
                mfa_option_id:
                  type: integer
                  enum: [1, 2, 3, 4, 5, 6]
                  description: Required when method is 'sms' or 'voice' to specify which phone number to use. Optional for 'push'.
      responses:
        '200':
          description: MFA challenge initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAChallengeResponse'
        '400':
          description: |
            Request validation failed

            **Possible error codes:**
            - CIAM_E01_01_009: Invalid MFA method
            - CIAM_E01_05_001: Missing required fields (context_id, transaction_id, or method)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              examples:
                invalid_method:
                  summary: Invalid MFA method provided
                  value:
                    error_code: "CIAM_E01_01_009"
                    context_id: "ctx_abc123"
                validation_error:
                  summary: Required fields missing
                  value:
                    error_code: "CIAM_E01_05_001"
                    context_id: "ctx_abc123"
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /auth/mfa/otp/verify:
    post:
      tags:
        - MFA
      summary: Verify MFA OTP challenge
      description: Verify OTP code
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - context_id
                - transaction_id
                - code
              properties:
                context_id:
                  type: string
                  description: Context ID from login response
                transaction_id:
                  type: string
                code:
                  type: string
                  description: OTP code
                  example: "1234"
      responses:
        '200':
          description: Additional authentication steps required
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ESignRequiredResponse'
                  - $ref: '#/components/schemas/DeviceBindRequiredResponse'
        '201':
          description: MFA verification successful
          headers:
            Set-Cookie:
              description: Refresh token set as httpOnly cookie
              schema:
                type: string
                example: "refresh_token=nonce_xyz789abc; HttpOnly; Secure; SameSite=Strict; Path=/; Max-Age=2592000"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAVerifySuccessResponse'
        '400':
          description: |
            MFA verification failed

            **Possible error codes:**
            - CIAM_E01_01_017: Invalid OTP code
            - CIAM_E01_01_018: Transaction not approved (push notification pending)
            - CIAM_E01_05_001: Missing required fields (context_id, transaction_id, or code)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              examples:
                invalid_otp:
                  summary: OTP code is incorrect
                  value:
                    error_code: "CIAM_E01_01_017"
                    context_id: "ctx_abc123"
                push_not_approved:
                  summary: Push notification not yet approved
                  value:
                    error_code: "CIAM_E01_01_018"
                    context_id: "ctx_def456"
                validation_error:
                  summary: Required fields missing
                  value:
                    error_code: "CIAM_E01_05_001"
                    context_id: "ctx_abc123"
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /auth/mfa/transactions/{transaction_id}:
    post:
      tags:
        - MFA
      summary: Verify MFA push transaction (polling endpoint)
      description: |
        POST-based polling endpoint to verify push notification approval status.
        Clients should poll this endpoint to check if push MFA has been approved by mobile device.

        Returns:
        - 200 MFA_PENDING: Transaction still awaiting mobile device approval (continue polling)
        - 201 SUCCESS: Push notification approved, authentication complete
        - 200 ESIGN_REQUIRED/DEVICE_BIND_REQUIRED: Next authentication step required
        - 404: Transaction not found
        - 410: Transaction expired or explicitly rejected
      parameters:
        - name: transaction_id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - context_id
              properties:
                context_id:
                  type: string
                  description: Context ID from login response
      responses:
        '200':
          description: Transaction state check - pending approval or next step required
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MFAPendingResponse'
                  - $ref: '#/components/schemas/ESignRequiredResponse'
                  - $ref: '#/components/schemas/DeviceBindRequiredResponse'
        '201':
          description: MFA verification successful - authentication complete
          headers:
            Set-Cookie:
              description: Refresh token set as httpOnly cookie
              schema:
                type: string
                example: "refresh_token=nonce_xyz789abc; HttpOnly; Secure; SameSite=Strict; Path=/; Max-Age=2592000"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAVerifySuccessResponse'
        '400':
          description: |
            Request validation failed

            **Possible error codes:**
            - CIAM_E01_05_001: Missing required fields (context_id) or invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_05_001"
                context_id: "ctx_abc123"
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'
        '404':
          description: |
            Transaction not found

            **Possible error codes:**
            - CIAM_E01_03_001: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_03_001"
                context_id: "ctx_abc123"
        '410':
          description: |
            Transaction expired or rejected by user

            **Possible error codes:**
            - CIAM_E01_03_002: Transaction expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_03_002"
                context_id: "ctx_abc123"
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /auth/mfa/transactions/{transaction_id}/approve:
    post:
      tags:
        - MFA
      summary: Approve push notification (mobile device)
      description: Mobile app approves push notification with number matching. Does not return tokens.
      parameters:
        - name: transaction_id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - context_id
                - selected_number
              properties:
                context_id:
                  type: string
                  description: Context ID from login response
                selected_number:
                  type: integer
                  description: Number selected by user on mobile device for matching
      responses:
        '200':
          description: Push notification approved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAApproveResponse'
        '400':
          description: |
            Transaction approval failed

            **Possible error codes:**
            - CIAM_E01_03_003: Transaction already processed
            - CIAM_E01_05_001: Missing required fields (context_id or selected_number)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              examples:
                already_processed:
                  summary: Transaction was already processed
                  value:
                    error_code: "CIAM_E01_03_003"
                    context_id: "ctx_abc123"
                validation_error:
                  summary: Required fields missing
                  value:
                    error_code: "CIAM_E01_05_001"
                    context_id: "ctx_abc123"
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'
        '404':
          description: |
            Transaction not found

            **Possible error codes:**
            - CIAM_E01_03_001: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_03_001"
                context_id: "ctx_abc123"
        '410':
          description: |
            Transaction expired

            **Possible error codes:**
            - CIAM_E01_03_002: Transaction expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_03_002"
                context_id: "ctx_abc123"
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /auth/esign/documents/{document_id}:
    get:
      tags:
        - eSign
      summary: Get eSign document
      description: Retrieve electronic signature document by ID
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
            example: terms-v1-2025
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      responses:
        '200':
          description: Document retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ESignDocument'
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'
        '404':
          description: |
            Document not found

            **Possible error codes:**
            - CIAM_E01_04_001: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_04_001"
                context_id: "ctx_abc123"
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /auth/esign/accept:
    post:
      tags:
        - eSign
      summary: Accept eSign document
      description: Accept electronic signature document
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - context_id
                - transaction_id
                - document_id
              properties:
                context_id:
                  type: string
                  description: Context ID from login response
                transaction_id:
                  type: string
                document_id:
                  type: string
                  example: terms-v1-2025
                acceptance_ip:
                  type: string
                acceptance_timestamp:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Additional authentication steps required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceBindRequiredResponse'
        '201':
          description: Document accepted successfully
          headers:
            Set-Cookie:
              description: Refresh token set as httpOnly cookie
              schema:
                type: string
                example: "refresh_token=nonce_xyz789abc; HttpOnly; Secure; SameSite=Strict; Path=/; Max-Age=2592000"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ESignAcceptResponse'
        '400':
          description: |
            eSign acceptance failed

            **Possible error codes:**
            - CIAM_E01_04_002: No pending eSign required
            - CIAM_E01_05_001: Missing required fields (context_id, transaction_id, or document_id)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              examples:
                esign_not_required:
                  summary: No pending eSign requirement
                  value:
                    error_code: "CIAM_E01_04_002"
                    context_id: "ctx_abc123"
                validation_error:
                  summary: Required fields missing
                  value:
                    error_code: "CIAM_E01_05_001"
                    context_id: "ctx_abc123"
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /auth/device/bind:
    post:
      tags:
        - Device
      summary: Bind/trust device
      description: Trust a device for future logins (skip MFA)
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - context_id
                - transaction_id
                - bind_device
              properties:
                context_id:
                  type: string
                  description: Context ID from login response
                transaction_id:
                  type: string
                bind_device:
                  type: boolean
                  description: True to bind device, false to decline binding
      responses:
        '200':
          description: Device bind decision processed, returns tokens
          headers:
            Set-Cookie:
              description: Refresh token set as httpOnly cookie
              schema:
                type: string
                example: "refresh_token=nonce_xyz789abc; HttpOnly; Secure; SameSite=Strict; Path=/; Max-Age=2592000"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceBindResponse'
        '400':
          description: |
            Device binding validation failed

            **Possible error codes:**
            - CIAM_E01_05_001: Missing required fields (context_id, transaction_id, or bind_device)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_05_001"
                context_id: "ctx_abc123"
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'
        '404':
          description: |
            Transaction not found

            **Possible error codes:**
            - CIAM_E01_03_001: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E01_03_001"
                context_id: "ctx_abc123"
        '503':
          description: |
            Service unavailable

            **Possible error codes:**
            - CIAM_E05_00_001: Server error
            - CIAM_E05_00_002: Server info not available (e.g. CAPI communication failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
              example:
                error_code: "CIAM_E05_00_001"
                context_id: "ctx_abc123"

  /.well-known/jwks.json:
    get:
      tags:
        - OIDC
      summary: JWKS endpoint
      description: JSON Web Key Set for token verification
      parameters:
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/AppId'
        - $ref: '#/components/parameters/AppVersion'
        - $ref: '#/components/parameters/ClientId'
      responses:
        '200':
          description: JWKS
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: object
        '401':
          description: |
            Client authentication failed

            **Gateway-level error:**
            - Unknown or invalid client ID (response format determined by gateway)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: |
        Reference token (nonce) that must be validated via Kong gateway.
        Token is opaque and requires backend database lookup for validation.
    cookieAuth:
      type: apiKey
      in: cookie
      name: refresh_token
      description: |
        Refresh token nonce stored in httpOnly cookie.
        Token is opaque and requires backend database lookup for validation.
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for gateway service authentication

  parameters:
    CorrelationId:
      name: x-correlation-id
      in: header
      required: false
      schema:
        type: string
        format: uuid
      description: Client-provided correlation ID for distributed tracing and request tracking

    AppId:
      name: x-app-id
      in: header
      required: false
      schema:
        type: string
      description: Client application identifier

    AppVersion:
      name: x-app-version
      in: header
      required: false
      schema:
        type: string
      description: Client application version

    ClientId:
      name: x-client-id
      in: header
      required: true
      schema:
        type: string
      description: Registered client application identifier. Required for all API requests. Must be a pre-registered value.

  schemas:
    # Unified Error Code Enum
    CIAMErrorCodes:
      type: string
      enum:
        # Authentication & Credential Errors (E01_01)
        - CIAM_E01_01_001
        - CIAM_E01_01_002
        - CIAM_E01_01_003
        - CIAM_E01_01_004
        - CIAM_E01_01_005
        - CIAM_E01_01_006
        - CIAM_E01_01_008
        - CIAM_E01_01_009
        - CIAM_E01_01_010
        - CIAM_E01_01_016
        - CIAM_E01_01_017
        - CIAM_E01_01_018
        # Transaction Errors (E01_03)
        - CIAM_E01_03_001
        - CIAM_E01_03_002
        - CIAM_E01_03_003
        # eSign Errors (E01_04)
        - CIAM_E01_04_001
        - CIAM_E01_04_002
        # Validation Errors (E01_05)
        - CIAM_E01_05_001
        # Token & Session Errors (E04_00)
        - CIAM_E04_00_001
        - CIAM_E04_00_002
        - CIAM_E04_00_003
        - CIAM_E04_00_004
        - CIAM_E04_00_005
        - CIAM_E04_00_006
        - CIAM_E04_00_007
        - CIAM_E04_00_008
        - CIAM_E04_00_009
        - CIAM_E04_00_010
        # Server Errors (E05_00)
        - CIAM_E05_00_001
        - CIAM_E05_00_002
      description: |
        CIAM Backend API Error Codes

        ## Authentication & Credential Errors (E01_01)
        * CIAM_E01_01_001 - User not found or invalid credentials
        * CIAM_E01_01_002 - User password locked
        * CIAM_E01_01_003 - User disabled
        * CIAM_E01_01_004 - Enterprise credential block
        * CIAM_E01_01_005 - MFA locked
        * CIAM_E01_01_006 - User deceased
        * CIAM_E01_01_008 - CAPI restriction blocked by bank or customer
        * CIAM_E01_01_009 - Invalid MFA method
        * CIAM_E01_01_010 - Analyze deny - User IP on deny list
        * CIAM_E01_01_016 - Username contains masked value
        * CIAM_E01_01_017 - Invalid OTP code
        * CIAM_E01_01_018 - Transaction not approved (push pending)

        ## Transaction Errors (E01_03)
        * CIAM_E01_03_001 - Transaction not found
        * CIAM_E01_03_002 - Transaction expired
        * CIAM_E01_03_003 - Transaction already processed

        ## eSign Errors (E01_04)
        * CIAM_E01_04_001 - Document not found
        * CIAM_E01_04_002 - No pending eSign required

        ## Validation Errors (E01_05)
        * CIAM_E01_05_001 - Invalid request parameters (missing required fields, invalid format, or invalid values)

        ## Token & Session Errors (E04_00)
        * CIAM_E04_00_001 - Refresh token invalid or not found
        * CIAM_E04_00_002 - Refresh token not valid or expired
        * CIAM_E04_00_003 - Session not readable
        * CIAM_E04_00_004 - Session not active
        * CIAM_E04_00_005 - Session expired
        * CIAM_E04_00_006 - Null access token
        * CIAM_E04_00_007 - Access token invalid or not found
        * CIAM_E04_00_008 - Null refresh token
        * CIAM_E04_00_009 - Username not matched
        * CIAM_E04_00_010 - Invalid or missing API key

        ## Server Errors (E05_00)
        * CIAM_E05_00_001 - Server error
        * CIAM_E05_00_002 - Server info not available (e.g. CAPI communication failure)

    # Error Response Schemas
    GatewayErrorResponse:
      type: object
      description: Gateway-level authentication failure. Response body format is determined by the gateway implementation (e.g., unknown client ID, invalid API key).

    ApplicationErrorResponse:
      type: object
      required:
        - error_code
      properties:
        error_code:
          $ref: '#/components/schemas/CIAMErrorCodes'
          description: Specific error code indicating the failure reason. See CIAMErrorCodes enum for all possible values and descriptions.
        context_id:
          type: string
          description: Authentication context identifier for tracking the request through the authentication flow. Not present for gateway-level endpoints.
      description: Standard application error response structure. The HTTP status code indicates the error category, and the error_code field provides the specific failure reason.

    LoginSuccessResponse:
      type: object
      required:
        - response_type_code
        - access_token
        - id_token
        - token_type
        - expires_in
        - context_id
      properties:
        response_type_code:
          type: string
          enum: [SUCCESS]
        access_token:
          type: string
        id_token:
          type: string
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          example: 900
          description: Token lifetime in seconds
        context_id:
          type: string

    MFARequiredResponse:
      type: object
      required:
        - response_type_code
        - otp_methods
        - mobile_approve_status
        - context_id
        - transaction_id
      properties:
        response_type_code:
          type: string
          enum: [MFA_REQUIRED]
        otp_methods:
          type: array
          description: Available phone numbers for OTP delivery
          items:
            type: object
            required:
              - value
              - mfa_option_id
            properties:
              value:
                type: string
                description: Last 4 digits of phone number
                pattern: '^\d{4}$'
                example: "1234"
              mfa_option_id:
                type: integer
                enum: [1, 2, 3, 4, 5, 6]
                description: Option identifier to use when initiating OTP challenge
        mobile_approve_status:
          type: string
          enum: [NOT_REGISTERED, ENABLED, DISABLED]
          description: Push notification availability (NOT_REGISTERED, ENABLED, or DISABLED)
        context_id:
          type: string
        transaction_id:
          type: string

    ESignRequiredResponse:
      type: object
      required:
        - response_type_code
        - context_id
        - transaction_id
        - esign_document_id
        - esign_url
      properties:
        response_type_code:
          type: string
          enum: [ESIGN_REQUIRED]
        context_id:
          type: string
        transaction_id:
          type: string
        esign_document_id:
          type: string
        esign_url:
          type: string

    DeviceBindRequiredResponse:
      type: object
      required:
        - response_type_code
        - context_id
        - transaction_id
      properties:
        response_type_code:
          type: string
          enum: [DEVICE_BIND_REQUIRED]
        context_id:
          type: string
        transaction_id:
          type: string

    DeviceBindResponse:
      type: object
      required:
        - response_type_code
        - access_token
        - id_token
        - token_type
        - expires_in
        - context_id
        - device_bound
      properties:
        response_type_code:
          type: string
          enum: [SUCCESS]
        access_token:
          type: string
        id_token:
          type: string
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          example: 900
          description: Token lifetime in seconds
        context_id:
          type: string
        device_bound:
          type: boolean
          description: True if device was bound, false if user denied binding

    MFAChallengeResponse:
      type: object
      required:
        - response_type_code
        - transaction_id
        - expires_at
      properties:
        response_type_code:
          type: string
          enum: [OTP_VERIFY_REQUIRED, PUSH_VERIFY_REQUIRED]
          description: |
            Indicates the verification flow to follow:
            * OTP_VERIFY_REQUIRED - Client should call /auth/mfa/otp/verify with OTP code (for sms/voice methods)
            * PUSH_VERIFY_REQUIRED - Client should poll /auth/mfa/transactions/{transaction_id} (for push method)
        transaction_id:
          type: string
        expires_at:
          type: string
          format: date-time
        display_number:
          type: integer
          description: Number to display for push challenge (only present when response_type_code is PUSH_VERIFY_REQUIRED)

    MFAVerifySuccessResponse:
      type: object
      required:
        - response_type_code
        - access_token
        - id_token
        - token_type
        - expires_in
        - transaction_id
      properties:
        response_type_code:
          type: string
          enum: [SUCCESS]
        access_token:
          type: string
        id_token:
          type: string
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          description: Token lifetime in seconds
        transaction_id:
          type: string

    MFAPendingResponse:
      type: object
      required:
        - response_type_code
        - transaction_id
      properties:
        response_type_code:
          type: string
          enum: [MFA_PENDING]
        transaction_id:
          type: string
        expires_at:
          type: string
          format: date-time
          description: When the transaction will expire
        retry_after:
          type: integer
          description: Suggested retry interval in milliseconds
          example: 1000

    MFAApproveResponse:
      type: object
      required:
        - success
        - transaction_id
      properties:
        success:
          type: boolean
        transaction_id:
          type: string

    ESignDocument:
      type: object
      required:
        - document_id
        - title
        - content
        - version
        - mandatory
      properties:
        document_id:
          type: string
        title:
          type: string
        content:
          type: string
        version:
          type: string
        mandatory:
          type: boolean

    ESignAcceptResponse:
      type: object
      required:
        - response_type_code
        - access_token
        - id_token
        - token_type
        - expires_in
        - context_id
        - transaction_id
        - esign_accepted
        - esign_accepted_at
      properties:
        response_type_code:
          type: string
          enum: [SUCCESS]
        access_token:
          type: string
        id_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
          description: Token lifetime in seconds
        context_id:
          type: string
        transaction_id:
          type: string
        esign_accepted:
          type: boolean
        esign_accepted_at:
          type: string
          format: date-time
